package cca.capitalcityaquatics.aquariuminfo.data

import androidx.annotation.DrawableRes
import androidx.annotation.StringRes

data class CalculatorCommonData(
	@StringRes val subtitleVolume1: Int,
	@StringRes val subtitleVolume2: Int,
	@StringRes val radioTextFeet: Int,
	@StringRes val radioTextInches: Int,
	@StringRes val labelLength: Int,
	@StringRes val labelWidth: Int,
	@StringRes val labelHeight: Int,
	@StringRes val labelEdge: Int,
	@StringRes val labelSide: Int,
	@StringRes val labelDiameter: Int,
	@StringRes val labelFullWidth: Int,
	@StringRes val placeholderLength: Int,
	@StringRes val placeholderWidth: Int,
	@StringRes val placeholderHeight: Int,
	@StringRes val placeholderEdge: Int,
	@StringRes val placeholderSide: Int,
	@StringRes val placeholderDiameter: Int,
	@StringRes val placeholderFullWidth: Int,
	@StringRes val equalsText: Int,
	@StringRes val calculatedTextGallons: Int,
	@StringRes val calculatedTextLiters: Int,
	@StringRes val calculatedTextWaterWeight: Int,
	@StringRes val labelWaterWeight: Int,
	@StringRes val radioHalfCylinder: Int,
	@StringRes val radioCornerCylinder: Int,
	@StringRes val radioFullCylinder: Int,
	@StringRes val labelCylinderType: Int,
	@DrawableRes val leadingIconLength: Int,
	@DrawableRes val leadingIconWidth: Int,
	@DrawableRes val leadingIconHeight: Int,
	@DrawableRes val leadingIconFullWidth: Int,
	@DrawableRes val leadingIconDiameter: Int,
	val conversionGallonsFeet: Double,
	val conversionGallonsInches: Double,
	val conversionLitersFeet: Double,
	val conversionLitersInches: Double,
	val conversionPoundsGallons: Double,
	@StringRes val radioTextDkh: Int,
	@StringRes val radioTextPpm: Int,
	@StringRes val radioTextMeq: Int,
	@StringRes val labelDkh: Int,
	@StringRes val labelPpm: Int,
	@StringRes val labelMeq: Int,
	@StringRes val placeholderDkh: Int,
	@StringRes val placeholderPpm: Int,
	@StringRes val placeholderMeq: Int,
	@StringRes val inputTextDkh: Int,
	@StringRes val inputTextPpm: Int,
	@StringRes val inputTextMeq: Int,
	@StringRes val approxText: Int,
	@StringRes val calculatedTextPpm: Int,
	@StringRes val calculatedTextDkh: Int,
	@StringRes val calculatedTextMeq: Int,
	@DrawableRes val leadingIconTDS: Int,
	@StringRes val labelPh: Int,
	@StringRes val placeholderPh: Int,
	@StringRes val inputText: Int,
	@StringRes val calculatedTextCO2: Int,
	@DrawableRes val leadingIconPH: Int,
	@DrawableRes val leadingIconDKH: Int,
	@StringRes val radioTextSalinity: Int,
	@StringRes val radioTextSpecificGravity: Int,
	@StringRes val radioTextConductivity: Int,
	@StringRes val radioTextDensity: Int,
	@StringRes val labelPpt: Int,
	@StringRes val labelSg: Int,
	@StringRes val placeholderPpt: Int,
	@StringRes val placeholderSg: Int,
	@StringRes val inputTextPpt: Int,
	@StringRes val inputTextSg: Int,
	@StringRes val inputTextConductivity: Int,
	@StringRes val inputTextDensity: Int,
	@StringRes val calculatedTextSg: Int,
	@StringRes val calculatedTextPpt: Int,
	@StringRes val calculatedTextDensity: Int,
	@StringRes val calculatedTextConductivity: Int,
	@StringRes val labelSalinity: Int,
	@StringRes val labelSpecificGravity: Int,
	@StringRes val labelConductivity: Int,
	@StringRes val labelDensity: Int,
	@DrawableRes val leadingIconSalinity: Int,
	@DrawableRes val leadingIconDensity: Int,
	@DrawableRes val leadingIconConductivity: Int,
	@DrawableRes val leadingIconSpecificGravity: Int,
	@StringRes val radioTextCelsius: Int,
	@StringRes val radioTextFahrenheit: Int,
	@StringRes val labelCelsius: Int,
	@StringRes val labelFahrenheit: Int,
	@StringRes val placeholderCelsius: Int,
	@StringRes val placeholderFahrenheit: Int,
	@StringRes val inputTextCelsius: Int,
	@StringRes val inputTextFahrenheit: Int,
	@StringRes val calculatedTextFahrenheit: Int,
	@StringRes val calculatedTextCelsius: Int,
	@StringRes val calculatedTextKelvin: Int,
	@DrawableRes val leadingIconTemperature: Int,
	@StringRes val labelTankVolume: Int,
)